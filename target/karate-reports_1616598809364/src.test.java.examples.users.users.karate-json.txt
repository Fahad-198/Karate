{"failedCount":1,"prefixedPath":"src\/test\/java\/examples\/users\/users.feature","packageQualifiedName":"src.test.java.examples.users.users","loopIndex":-1,"relativePath":"src\/test\/java\/examples\/users\/users.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":1102400,"millis":1.1024,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url 'https:\/\/gorest.co.in'"},"stepLog":"20:12:58.146 karate.env system property was: null \n"},{"result":{"nanos":8268100,"millis":8.2681,"status":"passed"},"step":{"line":8,"prefix":"Given","index":0,"text":"path '\/public-api\/users\/'"}},{"result":{"nanos":1149900,"millis":1.1499,"status":"passed"},"step":{"line":9,"prefix":"And","index":1,"text":"param name = 'Ivan'"}},{"result":{"nanos":1480974000,"millis":1480.974,"status":"passed"},"step":{"line":10,"prefix":"When","index":2,"text":"method get"},"stepLog":"20:12:58.813 request:\n1 > GET https:\/\/gorest.co.in\/public-api\/users\/?name=Ivan\n1 > Host: gorest.co.in\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/14.0.1)\n1 > Accept-Encoding: gzip,deflate\n\n\n20:12:59.698 response time in milliseconds: 853\n1 < 200\n1 < Server: nginx\n1 < Date: Wed, 24 Mar 2021 15:12:59 GMT\n1 < Content-Type: application\/json; charset=utf-8\n1 < Transfer-Encoding: chunked\n1 < Connection: keep-alive\n1 < Vary: [Accept-Encoding, Origin]\n1 < X-Frame-Options: [SAMEORIGIN, sameorigin]\n1 < X-XSS-Protection: 1; mode=block\n1 < X-Content-Type-Options: nosniff\n1 < X-Download-Options: noopen\n1 < X-Permitted-Cross-Domain-Policies: none\n1 < Referrer-Policy: strict-origin-when-cross-origin\n1 < ETag: W\/\"a19475780a4c21e001befd574d28165e\"\n1 < Cache-Control: max-age=0, private, must-revalidate\n1 < X-Request-Id: c73cea2b-b9ba-488d-aab8-99e0e2e475f9\n1 < X-Runtime: 0.004913\n1 < Strict-Transport-Security: max-age=31536000; includeSubDomains\n1 < Expect-CT: enforce; max-age=3600\n{\"code\":200,\"data\":[{\"gender\":\"Female\",\"updated_at\":\"2021-03-24T17:04:56.308+05:30\",\"name\":\"Ivan Ivan\",\"created_at\":\"2021-03-24T03:50:06.198+05:30\",\"id\":148,\"email\":\"sethi_kamalesh_dvm@dach-larkin.net\",\"status\":\"Active\"},{\"gender\":\"Male\",\"updated_at\":\"2021-03-24T18:50:30.062+05:30\",\"name\":\"Ivan Ivan\",\"created_at\":\"2021-03-24T03:50:06.251+05:30\",\"id\":152,\"email\":\"dhruv_tagore@fadel.com\",\"status\":\"Active\"},{\"gender\":\"Male\",\"updated_at\":\"2021-03-24T06:25:56.667+05:30\",\"name\":\"Ivan Ivanov\",\"created_at\":\"2021-03-24T06:25:54.790+05:30\",\"id\":1473,\"email\":\"IvanIvanov@gmail.com\",\"status\":\"Active\"},{\"gender\":\"Male\",\"updated_at\":\"2021-03-24T06:29:46.314+05:30\",\"name\":\"Ivan Ivanov\",\"created_at\":\"2021-03-24T06:29:44.167+05:30\",\"id\":1474,\"email\":\"IvanIvanov1@gmail.com\",\"status\":\"Active\"},{\"gender\":\"Female\",\"updated_at\":\"2021-03-24T06:30:29.035+05:30\",\"name\":\"Ivana Ivanova\",\"created_at\":\"2021-03-24T06:30:25.332+05:30\",\"id\":1475,\"email\":\"IvanIvanov2@gmail.com\",\"status\":\"Active\"},{\"gender\":\"Female\",\"updated_at\":\"2021-03-24T06:35:16.454+05:30\",\"name\":\"Ivana Ivanova\",\"created_at\":\"2021-03-24T06:35:12.243+05:30\",\"id\":1476,\"email\":\"IvanIvanov3@gmail.com\",\"status\":\"Active\"},{\"gender\":\"Female\",\"updated_at\":\"2021-03-24T06:42:58.179+05:30\",\"name\":\"Ivana Ivanova\",\"created_at\":\"2021-03-24T06:42:53.829+05:30\",\"id\":1481,\"email\":\"IvanIvanov4@gmail.com\",\"status\":\"Active\"}],\"meta\":{\"pagination\":{\"total\":7,\"pages\":1,\"limit\":20,\"page\":1}}}\n"},{"result":{"nanos":66000,"millis":0.066,"status":"passed"},"step":{"line":11,"prefix":"Then","index":3,"text":"status 200"}},{"result":{"nanos":196800,"millis":0.1968,"status":"passed"},"step":{"line":13,"prefix":"And","index":4,"text":"def userResponse = response"}},{"result":{"nanos":30071400,"errorMessage":"match failed: CONTAINS\n  $ | actual does not contain expected | actual array does not contain expected item - Ivan Ivan  (LIST:LIST)\n  [\"Ivan Ivan\",\"Ivan Ivan\",\"Ivan Ivanov\",\"Ivan Ivanov\",\"Ivana Ivanova\",\"Ivana Ivanova\",\"Ivana Ivanova\"]\n  [\"Ivan Ivan \"]\n\n    $[6] | not equal (STRING:STRING)\n    'Ivana Ivanova'\n    'Ivan Ivan '\n\n    $[5] | not equal (STRING:STRING)\n    'Ivana Ivanova'\n    'Ivan Ivan '\n\n    $[4] | not equal (STRING:STRING)\n    'Ivana Ivanova'\n    'Ivan Ivan '\n\n    $[3] | not equal (STRING:STRING)\n    'Ivan Ivanov'\n    'Ivan Ivan '\n\n    $[2] | not equal (STRING:STRING)\n    'Ivan Ivanov'\n    'Ivan Ivan '\n\n    $[1] | not equal (STRING:STRING)\n    'Ivan Ivan'\n    'Ivan Ivan '\n\n    $[0] | not equal (STRING:STRING)\n    'Ivan Ivan'\n    'Ivan Ivan '\n\nsrc\/test\/java\/examples\/users\/users.feature:14","millis":30.0714,"status":"failed"},"step":{"line":14,"prefix":"Then","index":5,"text":"match userResponse.data[*].name contains [\"Ivan Ivan \"]"},"stepLog":"20:12:59.735 src\/test\/java\/examples\/users\/users.feature:14\nThen match userResponse.data[*].name contains [\"Ivan Ivan \"]\nmatch failed: CONTAINS\n  $ | actual does not contain expected | actual array does not contain expected item - Ivan Ivan  (LIST:LIST)\n  [\"Ivan Ivan\",\"Ivan Ivan\",\"Ivan Ivanov\",\"Ivan Ivanov\",\"Ivana Ivanova\",\"Ivana Ivanova\",\"Ivana Ivanova\"]\n  [\"Ivan Ivan \"]\n\n    $[6] | not equal (STRING:STRING)\n    'Ivana Ivanova'\n    'Ivan Ivan '\n\n    $[5] | not equal (STRING:STRING)\n    'Ivana Ivanova'\n    'Ivan Ivan '\n\n    $[4] | not equal (STRING:STRING)\n    'Ivana Ivanova'\n    'Ivan Ivan '\n\n    $[3] | not equal (STRING:STRING)\n    'Ivan Ivanov'\n    'Ivan Ivan '\n\n    $[2] | not equal (STRING:STRING)\n    'Ivan Ivanov'\n    'Ivan Ivan '\n\n    $[1] | not equal (STRING:STRING)\n    'Ivan Ivan'\n    'Ivan Ivan '\n\n    $[0] | not equal (STRING:STRING)\n    'Ivan Ivan'\n    'Ivan Ivan '\n\nsrc\/test\/java\/examples\/users\/users.feature:14\n"}],"line":7,"description":"","durationMillis":1521.8286,"failed":true,"error":"match failed: CONTAINS\n  $ | actual does not contain expected | actual array does not contain expected item - Ivan Ivan  (LIST:LIST)\n  [\"Ivan Ivan\",\"Ivan Ivan\",\"Ivan Ivanov\",\"Ivan Ivanov\",\"Ivana Ivanova\",\"Ivana Ivanova\",\"Ivana Ivanova\"]\n  [\"Ivan Ivan \"]\n\n    $[6] | not equal (STRING:STRING)\n    'Ivana Ivanova'\n    'Ivan Ivan '\n\n    $[5] | not equal (STRING:STRING)\n    'Ivana Ivanova'\n    'Ivan Ivan '\n\n    $[4] | not equal (STRING:STRING)\n    'Ivana Ivanova'\n    'Ivan Ivan '\n\n    $[3] | not equal (STRING:STRING)\n    'Ivan Ivanov'\n    'Ivan Ivan '\n\n    $[2] | not equal (STRING:STRING)\n    'Ivan Ivanov'\n    'Ivan Ivan '\n\n    $[1] | not equal (STRING:STRING)\n    'Ivan Ivan'\n    'Ivan Ivan '\n\n    $[0] | not equal (STRING:STRING)\n    'Ivan Ivan'\n    'Ivan Ivan '\n\nsrc\/test\/java\/examples\/users\/users.feature:14","executorName":"main","name":"get all users","startTime":1616598777913,"refId":"[1:7]","endTime":1616598779735,"exampleIndex":-1}],"callDepth":0,"name":"Check returned users from API","description":"for help, see: https:\/\/github.com\/intuit\/karate\/wiki\/IDE-Support","resultDate":"2021-03-24 08:12:59 PM","durationMillis":1521.8286,"passedCount":0}